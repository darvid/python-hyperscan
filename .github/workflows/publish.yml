name: Publish

on:
  pull_request:
    branches:
      - main
    types: [closed]
  workflow_dispatch:

jobs:
  build:
    name: Build source distribution and wheels
    uses: ./.github/workflows/build.yml
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, ${{ vars.RELEASE_PR_BRANCH || 'create-pull-request' }}) && github.repository == 'darvid/python-hyperscan'
    permissions:
      contents: read
      actions: write
    with:
      force_build: true

  publish:
    name: Publish to GitHub Releases and PyPI
    runs-on: ubuntu-latest
    environment: release
    concurrency: publish
    needs: [build]
    if: needs.build.outputs.valid_event == 'true'
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: List artifacts
        run: ls -R dist/

      - name: Check if release is needed
        id: release_check
        run: |
          # Check if HEAD already has a release version tag (prevents redundant releases)
          if git describe --exact-match --tags HEAD --match "v*" 2>/dev/null; then
            EXISTING_TAG=$(git describe --exact-match --tags HEAD --match "v*" 2>/dev/null)
            echo "HEAD already tagged with release version $EXISTING_TAG, no release needed"
            echo "should_release=false" >> $GITHUB_OUTPUT
          else
            # Check if there are commits since last release
            LATEST_TAG=$(git describe --tags --abbrev=0 --match "v*" 2>/dev/null || echo "")
            if [[ -n "$LATEST_TAG" ]]; then
              COMMITS_COUNT=$(git rev-list ${LATEST_TAG}..HEAD --count 2>/dev/null || echo "1")
              if [[ "$COMMITS_COUNT" -eq 0 ]]; then
                echo "No commits since last release $LATEST_TAG, no new content to release"
                echo "should_release=false" >> $GITHUB_OUTPUT
              else
                echo "Found $COMMITS_COUNT commits since $LATEST_TAG, proceeding with release"
                echo "should_release=true" >> $GITHUB_OUTPUT
              fi
            else
              echo "No previous release found, proceeding with initial release"
              echo "should_release=true" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Publish to GitHub Releases
        if: steps.release_check.outputs.should_release == 'true'
        uses: python-semantic-release/publish-action@v9.21.1
        with:
          inputs: ./dist
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest

      - name: Publish to PyPI
        if: steps.release_check.outputs.should_release == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          verbose: true
