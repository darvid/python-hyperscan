name: Release
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: read
jobs:
  build:
    name: Build source distribution and wheels
    uses: ./.github/workflows/wheels.yml

  release:
    name: Publish package
    runs-on: ubuntu-22.04
    concurrency: release
    needs: build
    if: github.repository == 'darvid/python-hyperscan'
    permissions:
      id-token: write
      pull-requests: write
      contents: write
    env:
      RELEASE_PR_BRANCH: create-pull-request/patch
    steps:
      - name: Checkout python-hyperscan
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - uses: chainguard-dev/actions/setup-gitsign@main

      - name: Check if release needed
        id: release
        uses: python-semantic-release/python-semantic-release@v8.7.2
        with:
          force: "patch"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          root_options: "-v --noop"
          # python-semantic-release displays what it would have
          # committed if commit is true and noop is set
          commit: "true"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        if: github.event_name == 'workflow_dispatch' || steps.release.outputs.released == 'true'

      - name: Prepare dist
        if: github.event_name == 'workflow_dispatch' || steps.release.outputs.released == 'true'
        run: |
          mkdir dist
          mv --backup=numbered ./wheel-*/*.whl -t dist/
          mv --backup=numbered ./sdist/*.tar.gz -t dist/
          ls -ahl dist/
          rm -rf dist/*~

      - name: Create release branch
        if: steps.release.outputs.released == 'true'
        run: |
          # use the same default branch name that create-pull-request uses
          git checkout -b ${RELEASE_PR_BRANCH}
          git branch --set-upstream-to=${RELEASE_PR_BRANCH}

      - name: Semantic release
        uses: python-semantic-release/python-semantic-release@v8.7.2
        if: steps.release.outputs.released == 'true'
        with:
          force: "patch"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          root_options: "-v"
          push: "false"

      - name: Create PR
        id: cpr
        uses: peter-evans/create-pull-request@v4.0.2
        if: steps.release.outputs.released == 'true'
        with:
          base: main
          assignees: ${{ github.repository_owner }}
          title: "Release ${{ steps.release.outputs.version }}"

      - name: Finalize
        run: |
          echo ðŸª„âœ¨ PR created at: ${{ steps.cpr.outputs.pull-request-url }}
